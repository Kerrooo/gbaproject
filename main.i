# 1 "main.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "main.c"



# 1 "gba.h" 1







typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

typedef signed char s8;
typedef signed short s16;
typedef signed int s32;

typedef unsigned char byte;
typedef unsigned short hword;
typedef unsigned int word;
# 211 "gba.h"
enum
{
    VBLANK_HANDLER,
    HBLANK_HANDLER,
    VCOUNT_HANDLER,
    TIMER0_HANDLER,
    TIMER1_HANDLER,
    TIMER2_HANDLER,
    TIMER3_HANDLER,
    SERIAL_COM_HANDLER,
    DMA0_HANDLER,
    DMA1_HANDLER,
    DMA2_HANDLER,
    DMA3_HANDLER,
    KEYS_HANDLER,
    CART_HANDLER,
    MAX_INTERRUPT_HANDLERS,
};
# 267 "gba.h"
typedef void (*fp)(void);
# 5 "main.c" 2
# 1 "mygbalib.h" 1
# 1 "sprites.h" 1





int palette[] = {
((0) + (0<<5) + (0<<10)),
((31) + (31<<5) + (31<<10)),
((0) + (31<<5) + (31<<10)),
((26) + (26<<5) + (26<<10)),
((9) + (9<<5) + (9<<10)),
((31) + (31<<5) + (0<<10)),
((31) + (0<<5) + (0<<10)),
((0) + (0<<5) + (31<<10)),
((11) + (8<<5) + (3<<10)),
((27) + (27<<5) + (27<<10)),
((16) + (16<<5) + (16<<10)),
((31) + (17<<5) + (17<<10)),
((31) + (24<<5) + (24<<10)),
((27) + (0<<5) + (0<<10)),
((0) + (16<<5) + (0<<10)),
((0) + (31<<5) + (0<<10)),
((16) + (31<<5) + (16<<10)),
((23) + (31<<5) + (23<<10))
};




u16 sprites[] = {


0,0,0,0,1,5,1,6,
0,0,0,0,1,1,1,6,
0,0,0,4,1,1,1,6,
0,0,0,4,1,1,1,6,
0,0,0,4,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,1,1,6,

6,1,5,1,0,0,0,0,
6,1,1,1,0,0,0,0,
6,1,1,1,4,0,0,0,
6,1,1,1,4,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,0,0,0,0,
10,10,10,1,0,0,0,0,
6,1,1,1,0,0,0,0,

0,0,0,0,1,1,1,6,
0,0,0,0,1,1,1,6,
0,0,0,4,1,10,10,10,
0,0,0,4,1,10,10,10,
0,0,0,4,1,1,1,6,
0,0,0,0,1,1,1,6,
0,0,0,0,1,1,4,4,
0,0,0,0,0,0,0,0,

6,1,1,1,0,0,0,0,
6,1,1,1,0,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,4,0,0,0,
6,1,1,1,4,0,0,0,
6,1,1,1,0,0,0,0,
4,4,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,0,0,7,5,7,1,
0,0,0,0,7,7,7,1,
0,0,0,4,7,7,7,1,
0,0,0,4,7,7,7,1,
0,0,0,4,7,10,10,10,
0,0,0,0,7,10,10,10,
0,0,0,0,7,10,10,10,
0,0,0,0,7,7,7,1,

1,7,5,7,0,0,0,0,
1,7,7,7,0,0,0,0,
1,7,7,7,4,0,0,0,
1,7,7,7,4,0,0,0,
10,10,10,7,4,0,0,0,
10,10,10,7,0,0,0,0,
10,10,10,7,0,0,0,0,
1,7,7,7,0,0,0,0,

0,0,0,0,7,7,7,1,
0,0,0,0,7,7,7,1,
0,0,0,4,7,10,10,10,
0,0,0,4,7,10,10,10,
0,0,0,4,7,7,7,1,
0,0,0,0,7,7,7,1,
0,0,0,0,7,7,4,4,
0,0,0,0,0,0,0,0,

1,7,7,7,0,0,0,0,
1,7,7,7,0,0,0,0,
10,10,10,7,4,0,0,0,
10,10,10,7,4,0,0,0,
1,7,7,7,4,0,0,0,
1,7,7,7,0,0,0,0,
4,4,7,7,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,0,0,1,5,1,15,
0,0,0,0,1,1,1,15,
0,0,0,4,1,1,1,15,
0,0,0,4,1,1,1,15,
0,0,0,4,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,1,1,15,

15,1,5,1,0,0,0,0,
15,1,1,1,0,0,0,0,
15,1,1,1,4,0,0,0,
15,1,1,1,4,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,0,0,0,0,
10,10,10,1,0,0,0,0,
15,1,1,1,0,0,0,0,

0,0,0,0,1,1,1,15,
0,0,0,0,1,1,1,15,
0,0,0,4,1,10,10,10,
0,0,0,4,1,10,10,10,
0,0,0,4,1,1,1,15,
0,0,0,0,1,1,1,15,
0,0,0,0,1,1,4,4,
0,0,0,0,0,0,0,0,

15,1,1,1,0,0,0,0,
15,1,1,1,0,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,4,0,0,0,
15,1,1,1,4,0,0,0,
15,1,1,1,0,0,0,0,
4,4,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,1,1,
0,0,0,0,0,0,1,1,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,


1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,0,0,0,0,0,1,
1,1,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,

1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,0,0,0,0,0,1,1,
1,0,0,0,0,0,1,1,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,1,1,1,
0,0,0,0,0,1,1,1,

1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,1,1,0,0,0,0,0,
1,1,1,0,0,0,0,0,


1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,

0,0,1,1,0,0,1,1,
0,0,1,1,0,0,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,


0,0,0,0,0,0,1,1,
0,0,0,0,0,0,1,1,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,

0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,

1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,

1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,

1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,


0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,0,0,1,1,
0,0,1,1,0,0,1,1,

0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,

1,1,0,0,1,1,0,0,
1,1,0,0,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,


1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,

0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,

0,0,1,1,0,0,0,1,
0,0,1,1,0,0,0,1,
0,0,1,1,0,1,1,0,
0,0,1,1,0,1,1,0,
0,0,1,1,0,1,1,0,
0,0,1,1,0,1,1,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

1,0,0,0,1,1,0,0,
1,0,0,0,1,1,0,0,
0,1,1,0,1,1,0,0,
0,1,1,0,1,1,0,0,
0,1,1,0,1,1,0,0,
0,1,1,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,0,0,1,1,
0,0,0,0,0,0,1,1,

0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,1,1,
0,0,0,0,0,0,1,1,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

0,0,1,1,1,1,1,1,
0,0,1,1,1,1,1,1,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,

0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,


1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,0,0,
1,1,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,


0,0,0,0,1,5,1,2,
0,0,0,0,1,1,1,2,
0,0,0,4,1,1,1,2,
0,0,0,4,1,1,1,2,
0,0,0,4,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,10,10,10,
0,0,0,0,1,1,1,2,

2,1,5,1,0,0,0,0,
2,1,1,1,0,0,0,0,
2,1,1,1,4,0,0,0,
2,1,1,1,4,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,0,0,0,0,
10,10,10,1,0,0,0,0,
2,1,1,1,0,0,0,0,

0,0,0,0,1,1,1,2,
0,0,0,0,1,1,1,2,
0,0,0,4,1,10,10,10,
0,0,0,4,1,10,10,10,
0,0,0,4,1,1,1,2,
0,0,0,0,1,1,1,2,
0,0,0,0,1,1,4,4,
0,0,0,0,0,0,0,0,

2,1,1,1,0,0,0,0,
2,1,1,1,0,0,0,0,
10,10,10,1,4,0,0,0,
10,10,10,1,4,0,0,0,
2,1,1,1,4,0,0,0,
2,1,1,1,0,0,0,0,
4,4,1,1,0,0,0,0,
0,0,0,0,0,0,0,0,



0,0,0,0,0,0,0,0,
0,13,13,0,0,0,0,13,
0,13,6,6,0,0,0,13,
0,0,0,11,11,0,0,0,
0,0,0,11,0,0,9,0,
0,0,0,0,0,10,3,9,
0,13,6,11,0,10,3,3,
0,13,6,11,11,1,1,1,

13,13,0,0,0,0,0,0,
6,6,13,0,0,0,0,0,
12,12,13,0,0,0,0,0,
12,12,0,0,0,11,6,6,
1,0,0,12,11,11,6,13,
1,10,3,9,12,0,13,13,
1,10,3,3,0,0,0,0,
1,0,10,10,0,0,3,0,

0,0,6,0,1,1,9,1,
0,0,12,12,12,10,1,1,
0,0,12,0,10,0,1,0,
0,12,12,0,12,0,1,3,
13,6,12,12,12,0,0,0,
6,6,11,0,0,0,0,3,
13,6,13,0,0,0,10,0,
0,13,0,0,0,0,0,0,

1,1,1,0,0,10,10,0,
3,3,1,10,0,0,0,0,
3,0,1,1,0,0,0,0,
3,3,12,12,0,0,0,0,
0,12,0,12,12,0,0,0,
0,0,0,0,11,11,13,0,
0,0,0,0,11,6,13,0,
0,0,0,0,0,13,13,0,



1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,



1,5,5,5,5,5,10,10,
2,5,5,5,5,5,10,10,
5,5,5,5,5,5,10,10,
2,5,5,5,5,5,10,10,
1,2,5,5,5,5,10,10,
2,1,5,5,5,5,10,10,
2,5,8,5,5,5,10,10,
2,2,5,5,5,5,10,10,

10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,

1,5,5,5,5,5,10,10,
2,5,5,5,5,5,10,10,
5,5,5,8,5,5,10,10,
5,5,5,5,5,5,10,10,
2,5,5,5,5,5,10,10,
5,5,5,5,5,5,10,10,
2,2,5,5,5,5,10,10,
2,5,5,5,5,5,10,10,

10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,
10,0,0,0,1,1,0,0,



7,7,1,7,7,7,1,7,
7,1,7,7,7,1,1,7,
7,7,7,1,7,7,7,7,
7,7,7,7,7,7,7,7,
7,1,7,1,7,7,7,1,
7,7,7,7,7,7,1,7,
7,7,7,1,7,7,7,7,
7,1,7,7,1,7,7,7,

7,7,7,7,2,1,1,2,
7,7,7,2,2,1,2,2,
1,2,7,2,1,1,2,2,
7,1,7,2,1,2,2,7,
7,7,7,7,1,1,2,2,
7,2,1,7,1,1,2,2,
1,7,7,2,7,1,2,2,
7,7,7,1,7,2,1,2,

7,1,7,1,7,7,7,7,
7,1,7,7,7,7,7,7,
1,7,7,7,1,7,7,7,
7,7,7,7,7,1,7,7,
7,7,1,7,7,7,7,7,
7,7,7,7,1,7,1,7,
7,7,1,1,7,7,7,7,
7,7,7,1,7,7,1,7,

7,7,1,7,7,2,1,2,
7,1,7,2,7,1,2,2,
7,7,7,7,1,1,2,2,
1,7,7,2,7,1,1,2,
7,7,7,7,2,2,1,2,
7,1,2,7,1,1,2,2,
7,7,7,7,2,1,2,2,
7,7,1,2,2,1,2,2,



0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,

10,10,5,5,5,5,5,5,
10,10,5,5,5,5,5,5,
10,10,5,8,5,5,5,5,
10,10,5,5,5,5,5,5,
10,10,5,5,5,5,5,5,
10,10,5,5,5,5,5,5,
10,10,5,5,5,5,8,5,
10,10,5,5,5,5,5,5,

0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,
0,0,1,1,0,0,0,10,

10,10,5,5,16,5,5,5,
10,10,5,16,16,16,5,5,
10,10,5,16,16,16,16,5,
10,10,5,5,16,5,5,5,
10,10,5,5,16,5,5,5,
10,10,5,5,5,5,5,5,
10,10,8,5,5,5,5,5,
10,10,5,5,5,5,8,5,



5,5,5,5,5,5,5,5,
5,5,5,8,5,5,5,5,
5,8,5,5,5,8,5,5,
5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,
8,5,5,5,5,5,5,5,
5,5,5,5,5,5,8,5,
5,8,5,5,5,5,5,5,

5,5,5,5,8,5,5,8,
5,5,5,5,5,5,5,5,
5,5,8,5,5,5,5,5,
5,5,5,5,5,8,5,5,
5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,
5,5,5,5,5,8,5,5,
5,5,5,5,5,5,5,5,

5,5,5,5,5,8,5,8,
5,8,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,
5,5,5,5,5,8,5,5,
5,5,5,5,5,5,5,5,
5,5,5,8,5,5,5,5,
5,8,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,

5,8,5,5,5,5,5,5,
5,5,5,8,5,5,5,5,
5,5,5,5,8,5,5,5,
5,5,5,5,5,5,5,5,
5,5,5,5,8,5,5,5,
5,8,5,5,5,5,8,5,
5,5,8,5,5,5,5,5,
5,5,5,5,5,5,5,8,



0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,

0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,

0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,

0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,
0,0,1,1,0,0,1,1,
1,1,0,0,1,1,0,0,



13,13,13,13,11,12,13,13,
13,13,13,11,11,12,13,13,
13,13,11,11,12,13,13,13,
13,13,12,13,11,13,13,13,
13,13,12,13,11,13,13,13,
13,13,11,11,13,11,11,13,
13,13,13,11,13,11,11,12,
13,13,13,13,13,12,11,11,

13,13,13,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,0,0,0,0,0,
11,11,11,0,0,0,0,0,

13,13,13,13,11,11,11,13,
12,12,12,13,13,11,12,13,
12,12,12,12,13,11,11,12,
11,12,12,12,13,11,12,13,
11,12,12,12,13,13,13,13,
13,13,13,12,13,13,13,13,
13,13,11,11,13,13,13,13,
13,13,13,12,13,11,13,13,

11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,3,3,3,0,0,
11,11,11,0,0,0,0,0,
11,11,11,0,0,0,0,0,



0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,0,0,0,13,13,11,
0,0,0,0,0,13,13,12,

12,11,13,13,13,13,13,13,
11,11,12,11,13,13,13,13,
11,11,11,11,13,13,13,13,
13,13,11,11,12,11,11,13,
13,13,12,13,13,11,11,11,
13,13,13,13,13,13,11,12,
13,13,13,11,11,13,11,11,
13,13,13,12,13,13,13,13,

0,0,3,3,3,13,13,13,
0,0,3,3,3,13,13,13,
0,0,3,3,3,13,11,11,
0,0,3,3,3,13,11,12,
0,0,3,3,3,13,13,12,
0,0,3,3,3,13,13,13,
0,0,0,0,0,13,13,13,
0,0,0,0,0,13,13,13,

13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,
13,13,13,13,13,12,11,13,
13,11,11,11,13,12,11,11,
13,11,11,12,13,13,11,13,
13,13,13,12,13,13,11,13,
13,13,13,13,13,13,11,13,
13,13,13,13,12,11,13,13,



11,11,13,13,13,13,13,13,
13,13,13,11,13,13,13,13,
11,11,13,11,13,13,13,13,
13,13,11,13,12,13,11,13,
13,11,12,13,12,11,13,11,
13,13,13,13,13,13,13,13,
11,11,13,13,13,13,13,13,
11,13,13,12,13,13,13,13,

13,12,12,13,13,13,13,13,
13,11,11,13,13,13,13,13,
13,13,12,12,13,13,13,13,
13,13,13,13,11,12,13,13,
13,13,13,13,11,11,13,13,
13,11,11,13,13,11,13,13,
13,12,12,13,13,13,13,13,
13,13,12,13,13,13,13,13,

13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,
13,13,13,13,11,12,12,11,
13,13,13,11,11,12,12,11,
13,13,13,13,13,13,13,11,
13,13,13,11,13,13,12,11,
13,13,11,12,13,13,13,13,
13,13,13,11,12,12,13,13,

13,13,13,13,13,13,13,13,
13,13,13,13,13,11,12,13,
13,13,13,13,11,12,11,13,
13,13,11,13,11,13,13,13,
13,13,11,13,13,13,13,13,
11,13,13,13,13,13,13,13,
12,12,13,13,13,13,13,13,
11,12,13,13,13,13,13,13,



12,13,13,13,13,13,13,13,
13,13,13,13,11,13,13,13,
12,13,13,13,11,11,13,13,
12,13,13,13,11,12,13,13,
11,11,13,13,13,12,13,13,
13,11,13,13,13,13,13,13,
13,13,13,13,11,11,13,13,
13,13,13,13,13,12,12,13,

13,13,13,11,13,13,13,13,
13,13,13,11,13,13,13,13,
11,13,11,13,13,13,13,13,
13,13,11,11,12,13,13,13,
13,13,11,11,12,13,13,13,
13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,
13,13,13,11,11,13,13,13,

13,13,13,13,13,13,13,13,
13,11,13,13,13,12,13,13,
11,11,11,13,13,12,12,11,
11,11,13,13,13,13,11,11,
13,11,13,13,13,13,11,13,
11,11,13,13,13,13,13,13,
12,12,13,13,13,12,12,13,
13,13,13,13,13,12,12,13,

13,13,13,13,13,12,11,13,
13,13,13,13,12,12,11,13,
11,11,13,13,13,13,13,13,
13,11,13,13,13,13,13,13,
13,13,12,13,13,13,13,13,
13,12,11,11,13,12,13,13,
11,12,11,11,13,12,13,13,
13,13,11,11,13,13,13,13,



0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,



1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,

1,0,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,

0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,

0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,0,0,0,0,
0,1,1,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,



0,0,0,0,0,1,1,1,
0,0,0,0,0,1,1,1,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

1,1,1,1,1,0,0,0,
1,1,1,1,1,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,0,1,1,1,
0,0,0,0,0,0,1,1,

1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,



0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,1,
0,0,0,1,1,0,1,1,
0,0,0,1,1,1,1,0,
0,0,0,1,1,1,0,0,

0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,
0,1,1,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,1,1,1,0,0,
0,0,0,1,1,1,1,0,
0,0,0,1,1,0,1,1,
0,0,0,1,1,0,0,1,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,
0,0,1,1,1,1,0,0,
0,0,1,1,1,1,0,0,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,0,1,1,1,0,0,0,
0,0,1,1,1,0,0,0,



1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,1,0,0,0,
0,1,1,1,1,0,0,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,

0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,1,1,1,1,0,
0,0,0,1,1,1,1,0,
0,1,1,0,0,1,1,0,
0,1,1,0,0,1,1,0,

0,1,1,0,0,0,0,1,
0,1,1,0,0,0,0,1,
0,1,1,0,0,0,0,1,
0,1,1,0,0,0,0,1,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,

1,0,0,0,0,1,1,0,
1,0,0,0,0,1,1,0,
1,0,0,0,0,1,1,0,
1,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,



1,1,1,1,0,0,0,0,
1,1,1,1,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

0,0,0,0,1,1,1,1,
0,0,0,0,1,1,1,1,
0,0,0,0,0,1,1,0,
0,0,0,0,0,1,1,0,
0,0,0,0,1,1,0,0,
0,0,0,0,1,1,0,0,
0,0,0,1,1,0,0,0,
0,0,0,1,1,0,0,0,

0,0,0,0,1,0,0,0,
0,0,0,0,1,1,0,0,
0,0,0,0,0,1,0,0,
0,0,0,0,0,1,0,0,
0,0,0,0,0,1,1,0,
0,0,0,0,0,0,1,0,
0,0,0,0,0,0,1,1,
0,0,0,0,0,0,0,1,

0,0,0,1,0,0,0,0,
0,0,1,1,0,0,0,0,
0,0,1,0,0,0,0,0,
0,0,1,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,0,0,0,0,0,0,
1,1,0,0,0,0,0,0,
1,0,0,0,0,0,0,0,



0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,1,1,0,0,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,1,

0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,0,
0,1,1,1,1,1,0,0,
0,1,1,1,1,0,0,0,
0,1,1,1,0,0,0,0,
0,1,1,0,0,0,0,0,
0,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,

};
# 2 "mygbalib.h" 2


extern int state;
extern int xuser;

extern int select;
extern int blinker;
extern int select2;
extern int blinker2;
extern int count1;


void checkbutton(void)
{

    u16 buttons = (0x3FF & (~*(volatile u16*)0x4000130));

    if ((buttons & 0x001) == 0x001)
    {
        if (state == 0 && count1 > 15) {
             if (select == 0) {
                 clearSprite1();
                 state = 1;
             }
             else if (select == 1) {
                 clearSprite1();
                 state = 5;
             }
         }
        else if (state == 5) {
            clearSprite1();
            state = 0;
        }
        else if (state == 6) {
            if (select2 == 0) {
                clearSprite1();
                state = 2;
            }
            else if (select2 == 1) {
                clearSprite1();
                state = 0;
            }
        }
    }
    if ((buttons & 0x002) == 0x002)
    {

    }
    if ((buttons & 0x004) == 0x004)
    {

    }
    if ((buttons & 0x008) == 0x008)
    {
        if (state == 0 && count1 > 15) {
             if (select == 0) {
                 clearSprite1();
                 state = 1;
             }
             else if (select == 1 && blinker > 1) {
                 clearSprite1();
                 state = 5;
                 blinker = 0;
             }
         }
        else if (state == 5 && blinker > 1) {
            clearSprite1();
            state = 0;
            blinker = 0;
        }
        if (state == 6) {
             if (select2 == 0) {
                 clearSprite1();
                 state = 2;
             }
             else if (select2 == 1 && blinker2 > 1) {
                 clearSprite1();
                 state = 0;
                 blinker2 = 0;
             }
        }
    }
    if ((buttons & 0x010) == 0x010)
    {
                if (xuser < 144) {
                        xuser++;
                }
    }
    if ((buttons & 0x020) == 0x020)
    {
       if (xuser > 80) {
                        xuser--;
                }
    }
    if ((buttons & 0x040) == 0x040)
    {
       if(state == 0 && count1 > 15) {
           if(select == 1) {
               select = 0;
           }
       }
       if(state == 6) {
           if(select2 == 1) {
               select2 = 0;
           }
       }
    }
    if ((buttons & 0x080) == 0x080)
    {
       if(state == 0 && count1 > 15) {
           if(select == 0) {
               select = 1;
           }
       }
       if(state == 6) {
           if(select2 == 0) {
               select2 = 1;
           }
       }
    }
}

void fillPalette(void)
{
    int i;


    for (i = 0; i < 20; i++)
        ((unsigned short *) 0x5000200)[i] = palette[i];
}


void fillSprites(void)
{
    int i;


    for (i = 0; i < 128*16*16; i++) {
        ((unsigned short *) 0x6010000)[i] = (sprites[i*2+1] << 8) + sprites[i*2];
         }


    for(i = 0; i < 128; i++) {
        drawSprite(0, i, 240, 160);
    }
}


void drawSprite(int numb, int No, int x, int y)
{

    *(unsigned short *)(0x7000000 + 8*No) = y | 0x2000;
    *(unsigned short *)(0x7000002 + 8*No) = x | 0x4000;
    *(unsigned short *)(0x7000004 + 8*No) = numb*8;
}

void clearSprite1(void) {
        int i;
        for(i = 0; i < 128; i++) {
       drawSprite(0, i, 240, 160);
        }
}
# 6 "main.c" 2

int state = 0;
int count, count1 = 0;
int sec = 0;
int sec2 = 0;
int sec3 = 0;
int sec4 = 0;
int replay0,replay1,replay2,replay3,replay4,replay5,replay6,replay7,replay8,replay9,replay10 = 0;
int replay20,replay21,replay22,replay23,replay24,replay25,replay26,replay27,replay28,replay29,replay30 = 0;
int y0,y1,y2,y3,y4,y5,y6,y7,y8,y9,y10 = 0;
int y20,y21,y22,y23,y24,y25,y26,y27,y28,y29,y30 = 0;
int number0 = 3,number1 =6, number2 = 3, number3 = 4,number4 = 5,number5 = 5,number6 = 4,number7 = 4,number8 = 5,number9 = 4,number10 = 4;
int number20 = 5,number21 = 6, number22 = 4, number23 = 8,number24 = 6,number25 = 8,number26 = 5,number27 = 6,number28 = 6,number29 = 3,number30 = 6;
int xuser = 120;
int middle = 112, left = 96, right = 128;
int road_y,beach_y,ocean_y,palm_y1,palm_y2,finish_y = 0;
int road_y2,bridgeleft_y,bridgeright_y,lavaleft_y,lavaright_y,finish_y2 = 0;
int select = 0, blinker = 0;
int select2 = 0, blinker2 = 0;

void resettimer(void) {
        if (state != 0) {
                count1 = 0;
        }
        if (state != 1) {
                sec = 0;
                replay0 = 0;
                replay1 = 0;
                replay2 = 0;
                replay3 = 0;
                replay4 = 0;
                replay5 = 0;
                replay6 = 0;
                replay7 = 0;
                replay8 = 0;
                replay9 = 0;
                replay10 = 0;
                y0 = 0;
                y1 = 0;
                y2 = 0;
                y3 = 0;
                y4 = 0;
                y5 = 0;
                y6 = 0;
                y7 = 0;
                y8 = 0;
                y9 = 0;
                y10 = 0;
                number0 = 3;
                number1 =6;
                number2 = 3;
                number3 = 4;
                number4 = 5;
                number5 = 5;
                number6 = 4;
                number7 = 4;
                number8 = 5;
                number9 = 4;
                number10 = 4;
                finish_y = 0;
        }
        if (state != 2) {
                sec2 = 0;
                replay20 = 0;
                replay21 = 0;
                replay22 = 0;
                replay23 = 0;
                replay24 = 0;
                replay25 = 0;
                replay26 = 0;
                replay27 = 0;
                replay28 = 0;
                replay29 = 0;
                replay30 = 0;
                y20 = 0;
                y21 = 0;
                y22 = 0;
                y23 = 0;
                y24 = 0;
                y25 = 0;
                y26 = 0;
                y27 = 0;
                y28 = 0;
                y29 = 0;
                y30 = 0;
                number20 = 5;
                number21 = 6;
                number22 = 4;
                number23 = 8;
                number24 = 6;
                number25 = 8;
                number26 = 5;
                number27 = 6;
                number28 = 6;
                number29 = 3;
                number30 = 6;
                finish_y2 = 0;
        }
        if (state != 3) {
                sec3 = 0;
        }
        if (state != 4) {
                sec4 = 0;
        }
}

void bigcount (void) {
        resettimer();
        if (count > 53 && state != 0) {
                count = 0;
        }
        else if (state == 0 || state == 5) {
                if (count == 25 ) {
                        blinker ++;
                        count = 0;
                }
        }
        else if (state ==6) {
                if (count == 25){
                        blinker2++;
                        count = 0;
                }
        }
        if (state == 0){
                count1++;
        }
        else if (state == 1) {
                replay0++;
                replay1++;
                replay2++;
                replay3++;
                replay4++;
                replay5++;
                replay6++;
                replay7++;
                replay8++;
                replay9++;
                replay10++;
                if (count == 53 ) {
                        sec++;
                        count =0;
                }
        }
        else if (state == 2) {
                replay20++;
                replay21++;
                replay22++;
                replay23++;
                replay24++;
                replay25++;
                replay26++;
                replay27++;
                replay28++;
                replay29++;
                replay30++;
                if (count == 53 ) {
                        sec2++;
                        count =0;
                }
        }
        else if (state == 3) {
                if (count == 53 ) {
                        sec3++;
                        count =0;
                }
        }
        else if (state == 4) {
                if (count == 53 ) {
                        sec4++;
                        count =0;
                }
        }
}

void drawvehicle(int veh, int id, int speed, int x, int *y, int interval, int starttime, int *nooftimes, int *replay) {
        if (((*replay >= interval*53) && (*nooftimes > 0)) && ((starttime <= sec) || (starttime <= sec2))) {
                drawSprite(veh, id, x, *y);
                 if (speed==1){
                (*y)++;
                 }
                else if (speed == 2) {
                (*y) = (*y + 2);
                }
                else if (speed == 3) {
                (*y) = (*y + 3);
                }
                if (*y >= 160) {
                drawSprite( veh, id, 240, 160);
                *y = 0;
                (*nooftimes)--;
                *replay = 0;
                }
        }
}

void drawRoad(int road1, int road2, int *road_y, int x_start, int width, int road_id) {
        int i, j;
        int x33, y33;

        if (*road_y >16) {
                *road_y = 0;
        }

        for (j=0; j<10; j++) {
                y33 = *road_y + j*16;
                for (i=0; i<width; i++) {
                        x33 = x_start + i*16;
                        if (i == width - 1) {
                        drawSprite(road2, road_id, x33, y33);
                        } else {
                        drawSprite(road1, road_id, x33, y33);
                        }
                        road_id++;
                }
        }
        *road_y = *road_y + 2;
}

void drawStationary(int sprite, int x, int id) {
                int i,y = 0;

                for (i=0; i<10; i++) {
                        drawSprite(sprite, id, x, y);
                        y = y +16;
                        id++;
                }
}

int drawYMoving(int sprite, int y, int x, int id) {
        int i,temp_y = 0;

        if (y >16) {
                y = 0;
        }

        for (i=0; i<11; i++) {
                drawSprite(sprite, id, x, temp_y);
                temp_y = y + i*16;
                id++;
        }
        y = y + 1;
        return y;
}

int drawXLineMoving(int sprite, int y, int x, int id) {
        int i,temp_x = 0;

        if (y ==162) {
                for (i=0; i<5; i++) {
                drawSprite(sprite, id, 240, 160);
                id++;
                }
        return 162;
        }

        for (i=0; i<5; i++) {
                temp_x = x + i*16;
                drawSprite(sprite, id, temp_x, y);
                id++;
        }
        y = y + 2;
        return y;
}

void clearSprite(void) {
        int i;
        for(i = 0; i < 128; i++) {
       drawSprite(0, i, 240,160);
        }
}

void drawMenu(void) {

        drawSprite( 18, 113, 70, 30);
        drawSprite( 35, 114, 86, 36);
        drawSprite( 5, 115, 104, 36);
        drawSprite( 10, 116, 120, 36);
        drawSprite( 10, 117, 136, 36);
        drawSprite( 34, 118, 152, 36);

        drawSprite( 3, 100, 88, 96);
        drawSprite( 4, 101, 104, 96);
        drawSprite( 6, 102, 120, 96);
        drawSprite( 5, 103, 136, 96);
        drawSprite( 4, 104, 152, 96);

        drawSprite( 30, 105, 72, 130);
        drawSprite( 5, 106, 88, 130);
        drawSprite( 8, 107, 104, 130);
        drawSprite( 31, 108, 120, 130);
        drawSprite( 16, 109, 136, 130);
        drawSprite( 4, 110, 144, 130);
        drawSprite( 3, 111, 162, 130);

        if(select == 0) {
                drawSprite( 36, 112, 50, 96);
        }

        else if(select == 1) {
                drawSprite( 36, 112, 50, 130);
        }

        if(blinker%2) {
                if(select == 0) {
                        drawSprite( 3, 100, 240, 160);
                        drawSprite( 4, 101, 240, 160);
                        drawSprite( 6, 102, 240, 160);
                        drawSprite( 5, 103, 240, 160);
                        drawSprite( 4, 104, 240, 160);
                }
                else if(select == 1) {
                        drawSprite( 30, 105, 240, 160);
                        drawSprite( 5, 106, 240, 160);
                        drawSprite( 8, 107, 240, 160);
                        drawSprite( 31, 108, 240, 160);
                        drawSprite( 16, 109, 240, 160);
                        drawSprite( 4, 110, 240, 160);
                        drawSprite( 3, 111, 240, 160);
                }
        }
}

void drawCredits(void) {

        drawSprite( 30, 105, 72, 24);
        drawSprite( 5, 106, 88, 24);
        drawSprite( 8, 107, 104, 24);
        drawSprite( 31, 108, 120, 24);
        drawSprite( 16, 109, 136, 24);
        drawSprite( 4, 110, 144, 24);
        drawSprite( 3, 111, 162, 24);

        drawSprite( 33, 120, 80, 72);
        drawSprite( 8, 121, 96, 72);
        drawSprite( 5, 122, 112, 72);
        drawSprite( 35, 123, 126, 72);
        drawSprite( 16, 124, 144, 72);
        drawSprite( 11, 125, 152, 72);

        drawSprite( 33, 126, 88, 96);
        drawSprite( 8, 127, 104, 96);
        drawSprite( 11, 128, 120, 96);
        drawSprite( 32, 113, 136, 96);
        drawSprite( 16, 114, 152, 96);

        drawSprite( 5, 115, 104, 120);
        drawSprite( 10, 116, 120, 120);
        drawSprite( 11, 117, 136, 120);

        drawSprite( 36, 112, 220, 140);

        if(blinker%2) {
                drawSprite( 36, 112, 240, 160);
        }
}

void game(void) {
        bigcount();
        if (state == 0) {
                drawMenu();
        }

        else if(state == 1) {
                if (sec < 2) {
                        drawSprite( 3, 12, 80, 72);
                        drawSprite( 4, 13, 96, 72);
                        drawSprite( 6, 14, 112, 72);
                        drawSprite( 9, 15, 128, 72);
                        drawSprite( 8, 16, 144, 72);
                        drawSprite( 10, 17, 96, 90);
                        drawSprite( 11, 18, 112, 90);
                        drawSprite( 8, 19, 128, 90);
                }
                if(sec == 2) {
                drawSprite( 3, 12, 240, 160);
                drawSprite( 4, 13, 240, 160);
                drawSprite( 6, 14, 240, 160);
                drawSprite( 9, 15, 240, 160);
                drawSprite( 8, 16, 240, 160);
                drawSprite( 10, 17, 240, 160);
                drawSprite( 11, 18, 240, 160);
                drawSprite( 8, 19, 240, 160);
                }

                drawSprite(17, 0, xuser, 140);
                drawvehicle(0,1,1,middle,&y0,0,3,&number0, &replay0);
                drawvehicle(1,2,1,right,&y1,1,4,&number1, &replay1);
            drawvehicle(2,3,1,left,&y2,0,5,&number2, &replay2);
                drawvehicle(2,4,1,middle,&y3,0,7,&number3, &replay3);
                drawvehicle(0,5,1,right,&y4,1,10,&number4, &replay4);
                drawvehicle(0,6,1,left,&y5,1,10,&number5, &replay5);
                drawvehicle(1,7,1,middle,&y6,0,17,&number6, &replay6);
                drawvehicle(2,8,2,80,&y7,0,6,&number7, &replay7);
                drawvehicle(0,9,1,144,&y8,2,5,&number8, &replay8);
                drawvehicle(1,10,1,80,&y9,1,16,&number9, &replay9);
                drawvehicle(2,11,1,144,&y10,0,8,&number10, &replay10);

                drawRoad (19, 20, &road_y, 80, 5, 30);
                beach_y = drawYMoving(21, beach_y, 64, 80);
                ocean_y = drawYMoving(22, ocean_y, 48, 91);
                palm_y1 = drawYMoving(23, palm_y1, 160, 102);
                palm_y2 = drawYMoving(24, palm_y2, 176, 113);


                if(((y0>=134&&y0<=140)&&((xuser-8<=middle)&&(middle<=xuser+8)))||((y1>=134&&y1<=141)&&((xuser-8<=right)&&(right<=xuser+8)))||((y2>=134&&y2<=140)&&((xuser-8<=left)&&(left<=xuser+8)))||((y3>=134&&y3<=140)&&((xuser-8<=middle)&&(middle<=xuser+8)))||((y4>=134&&y4<=140)&&((xuser-8<=right)&&(right<=xuser+8)))||((y5>=134&&y5<=140)&&((xuser-8<=left)&&(left<=xuser+8)))||((y6>=134&&y6<=140)&&((xuser-8<=middle)&&(middle<=xuser+8)))||((y7>=134&&y7<=140)&&((xuser-8<=80)&&(80<=xuser+8)))||((y8>=134&&y8<=140)&&((xuser-8<=144)&&(144<=xuser+8)))||((y9>=134&&y9<=140)&&((xuser-8<=80)&&(80<=xuser+8)))||((y10>=134&&y10<=140)&&((xuser-8<=144)&&(144<=xuser+8)))) {
                        count = 0;
                        state = 3;
                        }
                if (sec > 29) {
                        finish_y = drawXLineMoving(25, finish_y, 80, 1);
                }


                if (sec == 32) {
                drawSprite( 3, 12, 80, 72);
                drawSprite( 4, 13, 96, 72);
                drawSprite( 6, 14, 112, 72);
                drawSprite( 9, 15, 128, 72);
                drawSprite( 8, 16, 144, 72);
                drawSprite( 10, 17, 96, 90);
                drawSprite( 11, 18, 112, 90);
                drawSprite( 8, 19, 128, 90);
                drawSprite( 30, 20, 80, 108);
                drawSprite( 15, 21, 96, 108);
                drawSprite( 8, 22, 112, 108);
                drawSprite( 6, 23, 128, 108);
                drawSprite( 5, 24, 144, 108);

                }
                if (sec == 35) {
                        clearSprite();
                        count = 0;
                        state = 2;
                }
        }
        else if(state == 2) {
                if (sec2 == 0 ) {
                        drawSprite( 3, 12, 80, 72);
                        drawSprite( 4, 13, 96, 72);
                        drawSprite( 6, 14, 112, 72);
                        drawSprite( 9, 15, 128, 72);
                        drawSprite( 8, 16, 144, 72);
                        drawSprite( 4, 17, 96, 90);
                        drawSprite( 12, 18, 112, 90);
                        drawSprite( 10, 19, 128, 90);
                }
                if (sec2 == 2) {
                        drawSprite( 3, 12, 240, 160);
                        drawSprite( 4, 13, 240, 160);
                        drawSprite( 6, 14, 240, 160);
                        drawSprite( 9, 15, 240, 160);
                        drawSprite( 8, 16, 240, 160);
                        drawSprite( 4, 17, 240, 160);
                        drawSprite( 12, 18, 240, 160);
                        drawSprite( 10, 19, 240, 160);
                }
                if (sec2 < 33) {
                        drawSprite(17, 0, xuser, 140);
                        drawvehicle(0,1,2,middle,&y20,2,4,&number20, &replay20);
                        drawvehicle(1,2,3,right,&y21,0,3,&number21, &replay21);
                   drawvehicle(2,3,2,left,&y22,2,3,&number22, &replay22);
                        drawvehicle(2,4,3,middle,&y23,0,19,&number23, &replay23);
                        drawvehicle(0,5,2,right,&y24,1,15,&number24, &replay24);
                        drawvehicle(0,6,3,left,&y25,1,15,&number25, &replay25);
                        drawvehicle(1,7,2,144,&y26,1,3,&number26, &replay26);
                        drawvehicle(0,8,3,80,&y27,1,6,&number27, &replay27);
                        drawvehicle(1,9,2,144,&y28,1,11,&number28, &replay28);
                        drawvehicle(2,10,2,80,&y29,2,17,&number29, &replay29);
                        drawvehicle(2,11,3,144,&y30,0,22,&number30, &replay30);

                        drawRoad(19, 20, &road_y2, 80, 5, 30);
                        bridgeleft_y = drawYMoving(26, bridgeleft_y, 64, 80);
                        bridgeright_y = drawYMoving(27, bridgeright_y, 160, 91);
                        lavaleft_y = drawYMoving(28, lavaleft_y, 48, 102);
                        lavaright_y =drawYMoving(29, lavaright_y, 176, 113);


                        if(((y20>=134&&y20<=140)&&((xuser-8<=middle)&&(middle<=xuser+8)))||((y21>=134&&y21<=141)&&((xuser-8<=right)&&(right<=xuser+8)))||((y22>=134&&y22<=140)&&((xuser-8<=left)&&(left<=xuser+8)))||((y23>=134&&y23<=140)&&((xuser-8<=middle)&&(middle<=xuser+8)))||((y24>=134&&y24<=140)&&((xuser-8<=right)&&(right<=xuser+8)))||((y25>=134&&y25<=140)&&((xuser-8<=left)&&(left<=xuser+8)))||((y26>=134&&y26<=140)&&((xuser-8<=144)&&(144<=xuser+8)))||((y27>=134&&y27<=140)&&((xuser-8<=80)&&(80<=xuser+8)))||((y28>=134&&y28<=140)&&((xuser-8<=144)&&(144<=xuser+8)))||((y29>=134&&y29<=140)&&((xuser-8<=80)&&(80<=xuser+8)))||((y30>=134&&y30<=140)&&((xuser-8<=144)&&(144<=xuser+8)))) {
                                sec4 = 0;
                                state = 4;
                                }
                        if (sec2 > 29) {
                                finish_y2 = drawXLineMoving(25, finish_y2, 80, 1);
                        }
                }

                if (sec2 == 32) {
                        drawSprite( 3, 12, 80, 72);
                        drawSprite( 4, 13, 96, 72);
                        drawSprite( 6, 14, 112, 72);
                        drawSprite( 9, 15, 128, 72);
                        drawSprite( 8, 16, 144, 72);
                        drawSprite( 4, 17, 96, 90);
                        drawSprite( 12, 18, 112, 90);
                        drawSprite( 10, 19, 128, 90);
                        drawSprite( 30, 20, 80, 108);
                        drawSprite( 15, 21, 96, 108);
                        drawSprite( 8, 22, 112, 108);
                        drawSprite( 6, 23, 128, 108);
                        drawSprite( 5, 24, 144, 108);
                }
                if (sec2 == 33) {
                        clearSprite();
                }
                if (sec2 == 34) {
                        drawSprite( 13, 101, 60, 72);
                        drawSprite( 10, 103, 80, 72);
                        drawSprite( 14, 104, 96, 72);
                        drawSprite( 12, 105, 128, 72);
                        drawSprite( 16, 106, 148, 72);
                        drawSprite( 11, 107, 156, 72);
                }
                if (sec2 == 36){
                        clearSprite();
                        state = 0;
                }
        }
        else if (state == 3 ) {
                drawSprite(18,0, xuser, 140);
                if (sec3 == 2) {
                        drawSprite( 13, 2, 96, 72);
                        drawSprite( 10, 3, 112, 72);
                        drawSprite( 14, 4, 128, 72);
                        drawSprite( 15, 5, 88, 90);
                        drawSprite( 10, 6, 104, 90);
                        drawSprite( 3, 7, 120, 90);
                        drawSprite( 8, 8, 136, 90);
                }
                if (sec3 == 5) {
                        sec3 = 0;
                        clearSprite();
                        state = 0;
                }
        }
        else if (state == 4) {
                drawSprite(18,0, xuser, 140);
                if (sec4 == 2) {
                        drawSprite( 13, 2, 96, 72);
                        drawSprite( 10, 3, 112, 72);
                        drawSprite( 14, 4, 128, 72);
                        drawSprite( 15, 5, 88, 90);
                        drawSprite( 10, 6, 104, 90);
                        drawSprite( 3, 7, 120, 90);
                        drawSprite( 8, 8, 136, 90);
                }
                if (sec4 == 4) {
                        clearSprite();
                        state = 6;
                        count =0;
                }
        }
        else if (state == 5) {
                drawCredits();
        }
        else if (state == 6) {
                drawSprite( 5, 100, 88, 96);
                drawSprite( 8, 101, 104, 96);
                drawSprite( 4, 102, 120, 96);
                drawSprite( 5, 103, 136, 96);
                drawSprite( 13, 104, 152, 96);

                drawSprite( 34, 105, 96, 130);
                drawSprite( 8, 106, 112, 130);
                drawSprite( 11, 107, 128, 130);
                drawSprite( 14, 108, 144, 130);

                if(select2 == 0) {
                        drawSprite( 36, 112, 50, 96);
                }

                else if(select2 == 1) {
                        drawSprite( 36, 112, 50, 130);
                }

                if(blinker2%2) {
                        if(select2 == 0) {
                                drawSprite( 5, 100, 240, 160);
                                drawSprite( 8, 101, 240, 160);
                                drawSprite( 4, 102, 240, 160);
                                drawSprite( 5, 103, 240, 160);
                                drawSprite( 13, 104, 240, 160);
                        }
                        else if(select2 == 1) {
                                drawSprite( 34, 105, 240, 160);
                                drawSprite( 8, 106, 240, 160);
                                drawSprite( 11, 107, 240, 160);
                                drawSprite( 14, 108, 240, 160);
                        }
                }
        }
}

void Handler(void)
{
    *(u16*)0x4000208 = 0x00;

         if ((*(u16*)0x4000202 & 0x8) == 0x8)
    {

         checkbutton();
         count++;
         game();
    }

    *(u16*)0x4000202 = *(u16*)0x4000202;

    *(u16*)0x4000208 = 0x01;
}




int main(void)
{


    *(unsigned short *) 0x4000000 = 0x40 | 0x2 | 0x1000;


         fillPalette();


    fillSprites();


         *(u16*)0x4000208 = 0x0;
         (*(unsigned int*)0x3007FFC) = (int)&Handler;
    *(u16*)0x4000200 |= 0x8;


    *(u16*)0x4000100 = 60618;


    *(u16*)0x4000102 |= 0x0001 | 0x0080 | 0x0040;



         *(u16*)0x4000208 = 0x1;
    while(1);

        return 0;
}
